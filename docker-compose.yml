version: "3.3"

services:
  app:
    build: .
    volumes:
      - './:/app'
    image: app
    networks:
      - default
      - proxy
    deploy:
      replicas: 1
      mode: replicated
      restart_policy:
        condition: on-failure
        delay: 20s
        window: 120s
    restart: unless-stopped
    ports:
      - '4000:3000'
      - 9229:9229
    command: ["node", "--inspect=0.0.0.0:9229", "index.js"]
    environment:
      VIRTUAL_PORT: 3000
      VIRTUAL_HOST: ${DOMAIN}
      LETSENCRYPT_HOST: ${DOMAIN}
      LETSENCRYPT_EMAIL: arianvaldivieso@gmail.com

  db:
    image: postgres
    restart: unless-stopped
    # container_name: container_postgres
    deploy:
      resources:
        limits:
          cpus: "0.75"
        reservations:
          cpus: "0.25"
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/postgres
    volumes:
      - postgresDB:/var/lib/postgresql/data
    ports:
      - '${POSTGRES_PORT}:5432'

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - 8090:8080

  minio:
    image: 'minio/minio:latest'
    ports:
      - '${FORWARD_MINIO_PORT:-9001}:9000'
      - '${FORWARD_MINIO_CONSOLE_PORT:-8901}:8900'
    environment:
      MINIO_ROOT_USER: sail
      MINIO_ROOT_PASSWORD: password
    volumes:
      - 'sail-data:/data/minio'
    command: 'minio server /data/minio --console-address ":8900"'
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - 'http://localhost:9000/minio/health/live'
      retries: 3
      timeout: 5s

volumes:
  postgresDB:
  sail-data:
    driver: local
networks:
  proxy:
    external: true
